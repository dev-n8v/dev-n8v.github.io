{"version":3,"file":"component---src-layouts-post-index-tsx-content-file-path-content-posts-personal-website-p-1-mdx-cee82e3220d35b6f15c8.js","mappings":"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","sources":["webpack://app/./src/components/organisms/post-header/index.tsx","webpack://app/./src/components/templates/post/styles.tsx","webpack://app/./src/components/templates/post/index.tsx","webpack://app/./src/providers/mdx-provider.tsx","webpack://app/./content/posts/personal-website/p1.mdx","webpack://app/./src/layouts/post/index.tsx","webpack://app/../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import Stack, { StackProps } from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { DateTime } from \"luxon\";\nimport * as React from \"react\";\n\nexport type PostHeaderProps = Omit<\n\tStackProps<\n\t\t\"div\",\n\t\t{\n\t\t\ttitle?: string | null;\n\t\t\tdate?: string | null;\n\t\t}\n\t>,\n\t\"sx\"\n>;\n\nexport const PostHeader = ({ title, date, ...stackProps }: PostHeaderProps) => {\n\tconst formatterDate = date\n\t\t? DateTime.fromISO(date).toLocaleString(DateTime.DATE_FULL)\n\t\t: \"\";\n\n\treturn (\n\t\t<Stack {...stackProps}>\n\t\t\t<Typography variant=\"h2\">{title}</Typography>\n\t\t\t<Typography variant=\"subtitle1\">{formatterDate}</Typography>\n\t\t</Stack>\n\t);\n};\n","import { css } from \"@emotion/react\";\n\nimport { AppTheme } from \"@/theme\";\n\nexport const styles = {\n\tmain: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tminHeight: \"95vh\",\n\t\t\tmarginBlockStart: theme.spacing(6),\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t}),\n\n\theader: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t}),\n};\n","import { Container } from \"@mui/material\";\nimport React from \"react\";\n\nimport { AppDrawer, AppDrawerProps } from \"@/components/organisms/app-drawer\";\nimport { AppFooter, AppFooterProps } from \"@/components/organisms/app-footer\";\nimport { AppHeader, AppHeaderProps } from \"@/components/organisms/app-header\";\nimport {\n\tPostHeader,\n\tPostHeaderProps,\n} from \"@/components/organisms/post-header\";\n\nimport { styles } from \"./styles\";\n\nexport type PostTemplateProps = React.PropsWithChildren<{\n\tappDrawerProps: AppDrawerProps;\n\tappHeaderProps: AppHeaderProps;\n\tappFooterProps: AppFooterProps;\n\tpostHeaderProps: PostHeaderProps;\n}>;\n\nexport const PostTemplate = ({\n\tappDrawerProps,\n\tappHeaderProps,\n\tappFooterProps,\n\tpostHeaderProps,\n\tchildren,\n}: PostTemplateProps) => (\n\t<>\n\t\t<AppHeader {...appHeaderProps} />\n\t\t<AppDrawer {...appDrawerProps} />\n\t\t<Container maxWidth=\"md\" css={styles.main}>\n\t\t\t<PostHeader {...postHeaderProps} css={styles.header} />\n\t\t\t{children}\n\t\t</Container>\n\t\t<AppFooter {...appFooterProps} />\n\t</>\n);\n","import { MDXProvider } from \"@mdx-js/react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nimport { AppTheme } from \"@/theme\";\n\nexport type AppMDXProviderProps = React.PropsWithChildren<object>;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst h1 = (props: any) => <Typography gutterBottom variant=\"h3\" {...props} />;\nconst h2 = (props: any) => <Typography gutterBottom variant=\"h4\" {...props} />;\nconst h3 = (props: any) => <Typography gutterBottom variant=\"h5\" {...props} />;\nconst h4 = (props: any) => <Typography gutterBottom variant=\"h6\" {...props} />;\nconst h5 = (props: any) => <Typography gutterBottom variant=\"h7\" {...props} />;\nconst h6 = (props: any) => (\n\t<Typography gutterBottom variant=\"subtitle1\" {...props} />\n);\nconst text = (props: any) => <Typography variant=\"body1\" {...props} />;\n\nconst strong = (props: any) => (\n\t<Typography\n\t\tvariant=\"body1\"\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tfontWeight: theme.typography.fontWeightBold,\n\t\t})}\n\t\t{...props}\n\t/>\n);\n\nconst p = (props: any) => (\n\t<Typography\n\t\t{...props}\n\t\tvariant=\"body1\"\n\t\tparagraph\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tmarginBlockEnd: theme.spacing(1),\n\t\t})}\n\t/>\n);\n\nconst ul = (props: any) => (\n\t<ul\n\t\t{...props}\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tmarginBlockStart: theme.spacing(0),\n\t\t\tmarginBlockEnd: theme.spacing(2),\n\t\t})}\n\t/>\n);\n\nconst li = (props: any) => <li {...props} css={{}} />;\n\nconst a = (props: any) => <Link {...props} />;\n\nconst defaultComponents = {\n\ttext,\n\tp,\n\th1,\n\th2,\n\th3,\n\th4,\n\th5,\n\th6,\n\tstrong,\n\tul,\n\tli,\n\ta,\n} satisfies React.ComponentProps<typeof MDXProvider>[\"components\"];\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nexport const AppMDXProvider = ({ children }: AppMDXProviderProps) => (\n\t<MDXProvider components={defaultComponents}>{children}</MDXProvider>\n);\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"In this series of posts, I'll take you through the process of how I built my own website, exploring the tools, technologies, and decisions I made along the way.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/mnt/app/content/posts/personal-website/p1.mdx\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from \"react\";\nimport {MyHelmet} from \"@/components/atoms/my-helmet\";\nimport {PostTemplate} from \"@/components/templates/post\";\nimport {useMainTemplateProps} from \"@/hooks/use-main-template-props\";\nimport {AppMDXProvider} from \"@/providers/mdx-provider\";\nimport {useSiteMetadata} from \"@/shell/default-headers\";\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\nconst PostLayout = _ref => {\n  var _data$mdx, _data$mdx$frontmatter, _data$mdx2, _data$mdx2$frontmatte, _data$mdx3, _data$mdx3$frontmatte;\n  let {children, data} = _ref;\n  const siteMetadata = useSiteMetadata();\n  const mainTemplateProps = useMainTemplateProps();\n  return ___EmotionJSX(AppMDXProvider, null, ___EmotionJSX(MyHelmet, null, ___EmotionJSX(\"title\", null, (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title, \" | \", siteMetadata.title)), ___EmotionJSX(PostTemplate, _extends({}, mainTemplateProps, {\n    postHeaderProps: {\n      title: (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : (_data$mdx2$frontmatte = _data$mdx2.frontmatter) === null || _data$mdx2$frontmatte === void 0 ? void 0 : _data$mdx2$frontmatte.title,\n      date: (_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : (_data$mdx3$frontmatte = _data$mdx3.frontmatter) === null || _data$mdx3$frontmatte === void 0 ? void 0 : _data$mdx3$frontmatte.date\n    }\n  }), children));\n};\nPostLayout\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostLayout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"2921388693\";\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["PostHeader","_ref","title","date","stackProps","formatterDate","DateTime","fromISO","toLocaleString","DATE_FULL","___EmotionJSX","Stack","Typography","variant","styles","main","theme","css","minHeight","marginBlockStart","spacing","marginBlockEnd","header","PostTemplate","appDrawerProps","appHeaderProps","appFooterProps","postHeaderProps","children","React","AppHeader","AppDrawer","Container","maxWidth","_extends","AppFooter","name","defaultComponents","text","props","p","paragraph","h1","gutterBottom","h2","h3","h4","h5","h6","strong","fontWeight","typography","fontWeightBold","ul","li","a","Link","AppMDXProvider","_ref2","MDXProvider","components","_createMdxContent","_components","Object","assign","_provideComponents","wrapper","MDXLayout","PostLayout","_data$mdx","_data$mdx$frontmatter","_data$mdx2","_data$mdx2$frontmatte","_data$mdx3","_data$mdx3$frontmatte","data","siteMetadata","useSiteMetadata","mainTemplateProps","useMainTemplateProps","MyHelmet","mdx","frontmatter","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}